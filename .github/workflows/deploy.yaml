name: build

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: PyPI - Build Python üêç distributions üì¶
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install poetry
      uses: abatilo/actions-poetry@v4

    - name: Install the project dependencies
      run: poetry install

    - name: Run the automated tests
      run: poetry run pytest tests --cov=ogn --cov-report=xml --cov-report=html

    - name: Lint code with flake8
      run: poetry run flake8 ogn tests --ignore=E501,E701

    - name: Build the project
      run: poetry build
      shell: bash

    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        overwrite: true
  
  publish-to-testpypi:
    name: Publish distribution üì¶ to PyPI (test)
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/ogn-client

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        verbose: true

  publish-to-pypi:
    name: Publish distribution üì¶ to PyPI (productive)
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/ogn-client
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true
  